import openai
import numpy as np
from pathlib import Path
from textwrap import dedent

import azure_client as azure_client

def answer_question(question:str, speeches:str) -> dict:
    """
    This function takes a question as input and returns a response generated by the OpenAI GPT engine.

    Args:
        question (str): Question to be answered

    Returns:
        dict: Raw response from azure openai
    """
    # Add system message to conversation
    selected_conversation_hist = [
        {"role": "system", "content": dedent(
        f"""
        You are an expert on the Danish royal family. You have intimate
        knowledge of the family members, their relations and events
        that have occurred in their family.
        
        Below you have transcripts of all the queen's New Year's speeches.
        Please use these, together your general knowledge of the royal family,
        to answer questions from the user.

        ### TRANSCRIPTS
        {speeches}
        """)
        },
        ]

    # Add question to conversation
    messages = selected_conversation_hist + [{"role": "user", "content":question}]
    client = azure_client.initialize_client()
    raw_answer = client.chat.completions.create(
        model="gpt-4-1106-preview",
        messages=messages
    )

    return raw_answer

def load_speeches():
    out = []
    for path in Path("./queens_speeches/speeches").glob("*.txt"):
        f = Path(path).read_text()
        out.append(f"\n#### SPEECH FROM {path.stem} ####\n")
        out.append(f)
    return "\n".join(out)

if __name__ == "__main__":

    speeches = load_speeches()
    # Test question answering
    question = "Hvad skete der i 2001?"
    raw_answer = answer_question(question, speeches)
    print(raw_answer.choices[0].message.content)